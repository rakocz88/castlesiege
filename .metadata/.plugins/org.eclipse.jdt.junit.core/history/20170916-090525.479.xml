<?xml version="1.0" encoding="UTF-8"?><testrun name="SomeTest.someTest (1)" project="CSCard" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testcase name="someTest" classname="com.pilaf.cs.card.SomeTest" time="58.288">
    <error>java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: cardcreator&#13;
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)&#13;
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)&#13;
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)&#13;
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)&#13;
	at com.sun.proxy.$Proxy107.create(Unknown Source)&#13;
	at com.pilaf.cs.card.SomeTest.someTest(SomeTest.java:29)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:497)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: cardcreator&#13;
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)&#13;
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)&#13;
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)&#13;
	at rx.Observable.unsafeSubscribe(Observable.java:10211)&#13;
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)&#13;
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)&#13;
	at rx.Observable.unsafeSubscribe(Observable.java:10211)&#13;
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)&#13;
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)&#13;
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)&#13;
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)&#13;
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)&#13;
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)&#13;
	at rx.Subscriber.setProducer(Subscriber.java:209)&#13;
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)&#13;
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)&#13;
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#13;
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#13;
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#13;
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#13;
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#13;
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#13;
	at rx.Observable.subscribe(Observable.java:10307)&#13;
	at rx.Observable.subscribe(Observable.java:10274)&#13;
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)&#13;
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)&#13;
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)&#13;
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)&#13;
	... 34 more&#13;
&#13;
</error>
  </testcase>
</testrun>
